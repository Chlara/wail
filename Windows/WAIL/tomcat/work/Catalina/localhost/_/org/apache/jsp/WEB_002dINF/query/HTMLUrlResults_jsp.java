/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.30
 * Generated at: 2013-02-13 21:24:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.query;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.Date;
import org.archive.wayback.ResultURIConverter;
import org.archive.wayback.WaybackConstants;
import org.archive.wayback.core.UIResults;
import org.archive.wayback.core.UrlSearchResult;
import org.archive.wayback.core.UrlSearchResults;
import org.archive.wayback.core.WaybackRequest;
import org.archive.wayback.util.StringFormatter;

public final class HTMLUrlResults_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/template/UI-header.jsp", out, true);
      out.write('\n');

UIResults results = UIResults.extractUrlQuery(request);
WaybackRequest wbRequest = results.getWbRequest();
UrlSearchResults uResults = results.getUrlResults();
ResultURIConverter uriConverter = results.getURIConverter();
StringFormatter fmt = wbRequest.getFormatter();

String searchString = wbRequest.getRequestUrl();




Date searchStartDate = wbRequest.getStartDate();
Date searchEndDate = wbRequest.getEndDate();

long firstResult = uResults.getFirstReturned();
long lastResult = uResults.getReturnedCount() + firstResult;

long totalCaptures = uResults.getMatchingCount();


      out.write('\n');
      out.print( fmt.format("PathPrefixQuery.showingResults",firstResult + 1,lastResult,
        totalCaptures,searchString) );
      out.write("\n");
      out.write("<br/>\n");
      out.write("\n");
      out.write("<hr></hr>\n");

Iterator<UrlSearchResult> itr = uResults.iterator();
while(itr.hasNext()) {
  UrlSearchResult result = itr.next();

  String urlKey = result.getUrlKey();
  String originalUrl = result.getOriginalUrl();
  String firstDateTSss = result.getFirstCaptureTimestamp();
  String lastDateTSss = result.getLastCaptureTimestamp();
  long numCaptures = result.getNumCaptures();
  long numVersions = result.getNumVersions();

  Date firstDate = result.getFirstCaptureDate();
  Date lastDate = result.getLastCaptureDate();
  
  if(numCaptures == 1) {
      String ts = result.getFirstCaptureTimestamp();
      String anchor = uriConverter.makeReplayURI(ts,originalUrl);
    
      out.write("\n");
      out.write("    <a onclick=\"SetAnchorDate('");
      out.print( ts );
      out.write("');\" href=\"");
      out.print( anchor );
      out.write("\">\n");
      out.write("      ");
      out.print( urlKey );
      out.write("\n");
      out.write("    </a>\n");
      out.write("    <span class=\"mainSearchText\">\n");
      out.write("      ");
      out.print( fmt.format("PathPrefixQuery.versionCount",numVersions) );
      out.write("\n");
      out.write("    </span>\n");
      out.write("    <br/>\n");
      out.write("    <span class=\"mainSearchText\">\n");
      out.write("      ");
      out.print( fmt.format("PathPrefixQuery.singleCaptureDate",firstDate) );
      out.write("\n");
      out.write("    </span>\n");
      out.write("    ");

    
  } else {
    String anchor = results.makeCaptureQueryUrl(originalUrl);
    
      out.write("\n");
      out.write("    <a href=\"");
      out.print( anchor );
      out.write("\">\n");
      out.write("      ");
      out.print( urlKey );
      out.write("\n");
      out.write("    </a>\n");
      out.write("    <span class=\"mainSearchText\">\n");
      out.write("      ");
      out.print( fmt.format("PathPrefixQuery.versionCount",numVersions) );
      out.write("\n");
      out.write("    </span>\n");
      out.write("    <br/>\n");
      out.write("    <span class=\"mainSearchText\">\n");
      out.write("      ");
      out.print( fmt.format("PathPrefixQuery.multiCaptureDate",numCaptures,firstDate,lastDate) );
      out.write("\n");
      out.write("    </span>\n");
      out.write("    ");
    
  }
  
      out.write("\n");
      out.write("  <br/>\n");
      out.write("  <br/> \n");
      out.write("  ");

}

// show page indicators:
int curPage = uResults.getCurPageNum();
if(curPage > uResults.getNumPages()) {
  
      out.write("\n");
      out.write("  <hr></hr>\n");
      out.write("  <a href=\"");
      out.print( results.urlForPage(1) );
      out.write("\">First results</a>\n");
      out.write("  ");

} else if(uResults.getNumPages() > 1) {
  
      out.write("\n");
      out.write("  <hr></hr>\n");
      out.write("  ");

  for(int i = 1; i <= uResults.getNumPages(); i++) {
    if(i == curPage) {
      
      out.write("\n");
      out.write("      <b>");
      out.print( i );
      out.write("</b>\n");
      out.write("      ");
    
    } else {
      
      out.write("\n");
      out.write("      <a href=\"");
      out.print( results.urlForPage(i) );
      out.write('"');
      out.write('>');
      out.print( i );
      out.write("</a>\n");
      out.write("      ");

    }
  }
}

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/template/UI-footer.jsp", out, true);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
